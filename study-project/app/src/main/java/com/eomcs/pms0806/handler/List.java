package com.eomcs.pms0806.handler;

public abstract class List {

  // Generalization을 통해 수퍼클래스를 정의할 경우
  // 그 수퍼클래스는 서브클래스의 공통분모를 모아두는 용도로만 만든것이다
  // 직접 사용하는 클래스가 아니다
  // 즉 서브클래스에게 공통분모를 상속해주기위한 역할을 한다
  // 이런 클래스의 경우 직접 인스턴스를 만들어 사용하지 않도록
  // 추상 클래스로 선언하는 것이 유지보수에 좋다
  // 특히 추상메서드를 잦은 경우에는 더더욱 무조건 추상클래스로 선언해야한다


  // 여기서 구현할까?
  // 어차피 서브클래스에서 목록을 다루는 방식에 따라
  // 구현방법이 다르다 따라서 수퍼클래스에서 구현해봐야
  //소용헚다. 그러니 구현하지 않은채로 두자
  // 즉, 추상메서드로 선언한다
  // 추상클래스는 List를 인스턴스로 생성하지 못하게 막을수 있다

  public abstract void add (Object item);
  public abstract Object[] toArray(); 
  public abstract boolean remove(Object item);


  //비록 구현한것은 없지만 수퍼클래스를 만듦으로서
  //메서드 시그너처를 통일할수있다
  //메서드를 호출에 일관성이 부여되고
  //클래스 사용법이 같아진다 (강제성)
  //프로그래밍에 일관성이 생긴다
}
